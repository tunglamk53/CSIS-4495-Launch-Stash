{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HOME_DESKTOP\\\\Desktop\\\\client\\\\src\\\\router\\\\RouteHandler.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst RouteHandler = ({\n  component: Component,\n  loggedIn,\n  ...rest\n}) => {\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => loggedIn ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 15\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: {\n        pathname: '/login',\n        state: {\n          from: props.location\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 15\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default RouteHandler;","map":{"version":3,"sources":["C:/Users/HOME_DESKTOP/Desktop/client/src/router/RouteHandler.js"],"names":["React","Route","Redirect","RouteHandler","component","Component","loggedIn","rest","props","pathname","state","from","location"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,SAAS,EAAEC,SAAZ;AAAuBC,EAAAA,QAAvB;AAAiC,KAAGC;AAApC,CAAD,KAA+C;AAChE,sBACI,oBAAC,KAAD,oBACMA,IADN;AAEE,IAAA,MAAM,EAAGC,KAAD,IAAWF,QAAQ,gBACvB,oBAAC,SAAD,oBAAeE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADuB,gBAEvB,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AAACC,QAAAA,QAAQ,EAAE,QAAX;AAAqBC,QAAAA,KAAK,EAAE;AAACC,UAAAA,IAAI,EAAEH,KAAK,CAACI;AAAb;AAA5B,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAQH,CATD;;AAWA,eAAeT,YAAf","sourcesContent":["import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst RouteHandler = ({component: Component, loggedIn, ...rest}) => {\r\n    return (\r\n        <Route\r\n          {...rest}\r\n          render={(props) => loggedIn\r\n            ? <Component {...props} />\r\n            : <Redirect to={{pathname: '/login', state: {from: props.location}}} />}\r\n        />\r\n      )\r\n};\r\n\r\nexport default RouteHandler;"]},"metadata":{},"sourceType":"module"}