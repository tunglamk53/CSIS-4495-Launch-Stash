{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HOME_DESKTOP\\\\Desktop\\\\client\\\\src\\\\pages\\\\CreationPage.js\";\nimport React, { useState } from \"react\";\nimport { Accordion, Card } from 'react-bootstrap';\n\nconst CreationPage = () => {\n  const email = localStorage.getItem('myEmail');\n  const [part1, setPart1] = useState('');\n  const [part2, setPart2] = useState('');\n  const [part3, setPart3] = useState('');\n\n  const saveCheckList = event => {\n    event.preventDefault();\n    fetch(`/user/checklist`, {\n      method: 'PUT',\n      body: JSON.stringify({\n        email,\n        part1,\n        part2,\n        part3\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n        'token-backend': localStorage.getItem('myToken')\n      }\n    }).then(res => res.json()).then(data => {\n      // if(data.msg) {\n      //     console.log(data.msg)\n      // }\n      console.log(data);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, \"Create your Checklist\"), /*#__PURE__*/React.createElement(Accordion, {\n    defaultActiveKey: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Accordion.Toggle, {\n    as: Card.Header,\n    eventKey: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \"PART 1\"), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n    eventKey: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    onClick: () => setPart1('AAA'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, \"AAA\"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 70\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    onClick: () => setPart1('BBB'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, \"BBB\"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 70\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    onClick: () => setPart1('CCC'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, \"CCC\")))), /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Accordion.Toggle, {\n    as: Card.Header,\n    eventKey: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, \"PART 2\"), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n    eventKey: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    onClick: () => setPart2('GGG'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, \"GGG\"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 70\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    onClick: () => setPart2('HHH'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, \"HHH\"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 70\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    onClick: () => setPart2('KKK'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }, \"KKK\")))), /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Accordion.Toggle, {\n    as: Card.Header,\n    eventKey: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, \"PART 3\"), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n    eventKey: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    onClick: () => setPart3('XXX'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, \"XXX\"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 70\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    onClick: () => setPart3('YYY'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, \"YYY\"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 70\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    onClick: () => setPart3('ZZZ'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, \"ZZZ\"))))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, \"Result:\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, \"Part1 -----> \", part1), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, \"Part2 -----> \", part2), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, \"Part3 -----> \", part3), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary btn-block\",\n    onClick: saveCheckList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, \"Save\"));\n};\n\nexport default CreationPage;","map":{"version":3,"sources":["C:/Users/HOME_DESKTOP/Desktop/client/src/pages/CreationPage.js"],"names":["React","useState","Accordion","Card","CreationPage","email","localStorage","getItem","part1","setPart1","part2","setPart2","part3","setPart3","saveCheckList","event","preventDefault","fetch","method","body","JSON","stringify","headers","then","res","json","data","console","log","Header"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Accordion, Card } from 'react-bootstrap';\r\n\r\nconst CreationPage = () => {\r\n    const email = localStorage.getItem('myEmail')\r\n\r\n    const [part1, setPart1] = useState('')\r\n    const [part2, setPart2] = useState('')\r\n    const [part3, setPart3] = useState('')\r\n\r\n    const saveCheckList = event => {\r\n        event.preventDefault()\r\n\r\n        fetch(`/user/checklist`, {\r\n            method: 'PUT',\r\n            body: JSON.stringify({ email, part1, part2, part3 }),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'token-backend': localStorage.getItem('myToken')\r\n            }   \r\n        }).then(res => res.json())\r\n        .then(data => {\r\n            // if(data.msg) {\r\n            //     console.log(data.msg)\r\n            // }\r\n            console.log(data)          \r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n        <h1>Create your Checklist</h1>\r\n        <Accordion defaultActiveKey=\"0\">\r\n        <Card>\r\n            <Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n            PART 1\r\n            </Accordion.Toggle>\r\n            <Accordion.Collapse eventKey=\"0\">\r\n                <Card.Body>\r\n                    <Card onClick={() => setPart1('AAA')}>AAA</Card> <br/>\r\n                    <Card onClick={() => setPart1('BBB')}>BBB</Card> <br/>\r\n                    <Card onClick={() => setPart1('CCC')}>CCC</Card> \r\n\r\n                </Card.Body>\r\n            </Accordion.Collapse>\r\n        </Card>\r\n        <Card>\r\n            <Accordion.Toggle as={Card.Header} eventKey=\"1\">\r\n            PART 2\r\n            </Accordion.Toggle>\r\n            <Accordion.Collapse eventKey=\"1\">\r\n                <Card.Body>\r\n                    <Card onClick={() => setPart2('GGG')}>GGG</Card> <br/>\r\n                    <Card onClick={() => setPart2('HHH')}>HHH</Card> <br/>\r\n                    <Card onClick={() => setPart2('KKK')}>KKK</Card> \r\n\r\n                </Card.Body>\r\n            </Accordion.Collapse>\r\n        </Card>\r\n        <Card>\r\n            <Accordion.Toggle as={Card.Header} eventKey=\"2\">\r\n            PART 3\r\n            </Accordion.Toggle>\r\n            <Accordion.Collapse eventKey=\"2\">\r\n                <Card.Body>\r\n                    <Card onClick={() => setPart3('XXX')}>XXX</Card> <br/>\r\n                    <Card onClick={() => setPart3('YYY')}>YYY</Card> <br/>\r\n                    <Card onClick={() => setPart3('ZZZ')}>ZZZ</Card> \r\n\r\n                </Card.Body>\r\n            </Accordion.Collapse>\r\n        </Card>\r\n        </Accordion>\r\n\r\n        <br/>\r\n        <h1>Result:</h1>\r\n        <p>Part1 -----> {part1}</p>\r\n        <p>Part2 -----> {part2}</p>\r\n        <p>Part3 -----> {part3}</p>\r\n\r\n        <button \r\n            type=\"button\" \r\n            className=\"btn btn-primary btn-block\"\r\n            onClick={saveCheckList}\r\n        >Save</button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreationPage"]},"metadata":{},"sourceType":"module"}