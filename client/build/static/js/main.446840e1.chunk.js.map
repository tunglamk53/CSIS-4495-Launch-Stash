{"version":3,"sources":["assets/logo.png","assets/pic1.png","assets/pic2.png","assets/pic3.png","assets/pic10.png","assets/pic5.jpg","assets/pic6.PNG","assets/pic7.jpg","assets/pic8.JPG","assets/pic9.png","contexts/UserContext.js","pages/NavBar/NavBar.js","pages/components/FacebookShareButton.js","pages/NavBar/FooterBar.js","pages/HomePage.js","pages/LoginPage.js","pages/SignUpPage.js","pages/LogOutPage.js","pages/components/Loading.js","pages/ProfilePage.js","router/RouteHandler.js","data/step_1.js","contexts/CheckBoxContext1.js","pages/utils/CheckBoxStep1.js","data/step_2.js","contexts/CheckBoxContext2.js","pages/utils/CheckBoxStep2.js","data/step_3.js","contexts/CheckBoxContext3.js","pages/utils/CheckBoxStep3.js","data/step_4.js","contexts/CheckBoxContext4.js","pages/utils/CheckBoxStep4.js","pages/utils/CheckBoxes.js","pages/utils/CheckBoxResultsStep1.js","pages/utils/CheckBoxResultsStep2.js","pages/utils/CheckBoxResultsStep3.js","pages/utils/CheckBoxResultsStep4.js","pages/utils/CheckBoxResults.js","pages/CreationPage.js","pages/components/ChecklistsTable.js","pages/components/CheckboxItem.js","pages/ChecklistPage.js","pages/ProductIdeaPage.js","pages/TargetAudiencesPage.js","pages/SolutionsPage.js","pages/AboutUsPage.js","pages/FeedbackPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","UserContext","createContext","NavBar","loggedIn","useContext","className","to","src","Logo","width","height","alt","id","localStorage","getItem","FaceBookShareButton","dangerouslySetInnerHTML","__html","HomePage","props","console","log","CardGroup","Card","border","style","Img","variant","pic2","Body","Title","Text","pic1","pic3","Button","onClick","history","push","Login","setLoggedIn","useState","email","setEmail","password","setPassword","message","setMessage","onSubmit","event","preventDefault","fetch","method","body","JSON","stringify","headers","then","res","json","data","token","setItem","myToken","type","value","onChange","e","target","placeholder","htmlFor","SignUp","username","setUserName","name","LogOutPage","useEffect","removeItem","Loading","Spinner","animation","ProfilePage","user","setUser","a","result","fetchUser","pic10","RouteHandler","Component","component","rest","render","pathname","state","from","location","step_1","CheckBoxContext1","CheckBoxStep1","Step1","setStep1","map","index","key","checked","indexOf","content","currentIndex","newChecked","splice","handleToggle","step_2","CheckBoxContext2","CheckBoxStep2","Step2","setStep2","step_3","CheckBoxContext3","CheckBoxStep3","Step3","setStep3","step_4","CheckBoxContext4","CheckBoxStep4","Step4","setStep4","CheckBoxes","Accordion","defaultActiveKey","Toggle","as","Header","eventKey","Collapse","CheckBoxResultsStep1","CheckBoxResultsStep2","CheckBoxResultsStep3","CheckBoxResultsStep4","CheckBoxResults","CreationPage","checklistName","setChecklistName","isSuccess","setIsSuccess","InputGroup","Prepend","FormControl","step1","step2","step3","step4","alert","disabled","ChecklistsTable","onDeleteButton","item","_id","status","newChecklists","setChecklists","checklists","Table","setClickedItem","onClickItemHandle","CheckboxItem","renderSteps","step","clickedItem","ChecklistPage","fetchData","ProductIdeaPage","pic5","TargetAudiencesPage","pic6","SolutionsPage","pic7","AboutUsPage","pic8","FeedbackPage","pic9","App","useMemo","checkboxValue1","checkboxValue2","checkboxValue3","checkboxValue4","Provider","exact","path","LoginPage","SignUpPage","FooterBar","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.446840e1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.166e0a39.png\";","module.exports = __webpack_public_path__ + \"static/media/pic1.9781db9b.png\";","module.exports = __webpack_public_path__ + \"static/media/pic2.66c2a437.png\";","module.exports = __webpack_public_path__ + \"static/media/pic3.6f9f1a3d.png\";","module.exports = __webpack_public_path__ + \"static/media/pic10.f0fcdea8.png\";","module.exports = __webpack_public_path__ + \"static/media/pic5.d03cc97b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pic6.549710e7.PNG\";","module.exports = __webpack_public_path__ + \"static/media/pic7.1b9ba4eb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pic8.6509b4ce.JPG\";","module.exports = __webpack_public_path__ + \"static/media/pic9.19dd6afd.png\";","import { createContext } from \"react\"\r\n\r\nconst UserContext = createContext(null)\r\n\r\nexport default UserContext\r\n","import React, { useContext } from 'react';\r\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport { Link } from \"react-router-dom\";\r\nimport UserContext from '../../contexts/UserContext'\r\nimport Logo from '../../assets/logo.png'\r\n\r\nconst NavBar = () => {\r\n    const { loggedIn } = useContext(UserContext)\r\n    // const tkn = localStorage.getItem(\"myToken\")\r\n\r\n    if (loggedIn === null || loggedIn === \"undefined\") {\r\n        return (\r\n            <nav className=\"navbar navbar-expand navbar-light fixed-top\">\r\n                <div className=\"container\">\r\n                    <Link className=\"navbar-brand text-danger font-weight-bold\" to={\"/\"}>\r\n                        <img\r\n                            src={Logo}\r\n                            width=\"50\"\r\n                            height=\"50\"\r\n                            className=\"d-inline-block mr-3\"\r\n                            alt=\"React Bootstrap logo\"\r\n                        />\r\n                        LAUNCH STASH - CSIS 4495\r\n                    </Link>\r\n                <div className=\"nav-pills\" id=\"navbarTogglerDemo02\">\r\n                    <ul className=\"navbar-nav ml-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link btn-outline-warning\" to={\"/login\"}>Log In</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link btn-outline-warning\" to={\"/signup\"}>Sign Up</Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                </div>\r\n            </nav>\r\n        )\r\n    } else {\r\n        return (\r\n            <nav className=\"navbar navbar-expand navbar-light fixed-top\">\r\n                <div className=\"container\">\r\n                    <Link className=\"navbar-brand text-danger font-weight-bold\" to={\"/\"}>\r\n                        <img\r\n                            src={Logo}\r\n                            width=\"50\"\r\n                            height=\"50\"\r\n                            className=\"d-inline-block mr-3\"\r\n                            alt=\"React Bootstrap logo\"\r\n                        />\r\n                        LAUNCH STASH - CSIS 4495\r\n                    </Link>\r\n                    <div className=\"nav-pills\" id=\"navbarTogglerDemo02\">\r\n                        <ul className=\"navbar-nav ml-auto\">\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link text-danger btn-outline-warning font-weight-bold\" to={\"/my-checklist\"}>My Checklist</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link btn-outline-warning\" to={\"/profile\"}>{localStorage.getItem('myEmail')}</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link btn-outline-warning\" to={\"/logout\"}>Log Out</Link>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavBar\r\n","import React from 'react'\r\n\r\nconst FaceBookShareButton = () => {\r\n\r\n    const iframe = '<iframe src=\"https://www.facebook.com/plugins/share_button.php?href=https%3A%2F%2Flit-refuge-83472.herokuapp.com%2F&layout=button&size=large&appId=3133944153329433&width=77&height=28\" width=\"77\" height=\"28\" style=\"border:none;overflow:hidden\" scrolling=\"no\" frameborder=\"0\" allowTransparency=\"true\" allow=\"encrypted-media\"></iframe>'\r\n\r\n    return (\r\n        <>\r\n            <div className='btn-lg' dangerouslySetInnerHTML={ {__html: iframe} } />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FaceBookShareButton","import React from 'react';\r\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport { Link } from \"react-router-dom\";\r\nimport FaceBookShareButton from \"../components/FacebookShareButton\";\r\n\r\nconst NavBar = () => {\r\n\r\n    return (\r\n        <nav className=\"navbar-expand-sm navbar-dark fixed-bottom\">\r\n            <div className=\"nav-pills\" id=\"\">\r\n                <ul className=\"navbar-nav mr-3 float-right\">\r\n                    <li><FaceBookShareButton /></li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link badge-warning text-white rounded-pill mr-2\" to={\"/feedback\"}>Feedback</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link badge-warning text-white rounded-pill\" to={\"/about-us\"}>About Us</Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n","import React from \"react\";\r\nimport { Card, Button, CardGroup } from 'react-bootstrap'\r\nimport pic1 from '../assets/pic1.png'\r\nimport pic2 from '../assets/pic2.png'\r\nimport pic3 from '../assets/pic3.png'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst HomePage = (props) => {\r\n\r\n    const onClickCheckList = () => {\r\n        props.history.push('/checklist');\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"auth-wrapper-home\">\r\n        <div className=\"auth-inner-home\">\r\n            <h1 className='text-secondary text-center mb-5'>WELCOME TO <span className=\"text-danger\">LAUNCH STASH</span></h1>\r\n\r\n                                            {console.log(localStorage.getItem(\"myToken\"))}\r\n\r\n        <div>\r\n            <CardGroup>\r\n            <Card border=\"white\" style={{ width: '18rem' }}>\r\n              <Card.Img variant=\"top\" src={pic2} />\r\n              <Card.Body>\r\n                  <Card.Title className=\"text-success\">PRODUCT IDEA</Card.Title>\r\n                  <Card.Text className='text-secondary'>\r\n                      A website helps user to better their\r\n                      launching process with 2 main contents:\r\n                      <ul>\r\n                          <li>Launch process checklist</li>\r\n                          <li>Launch process useful resources</li>\r\n                      </ul>\r\n                  </Card.Text>\r\n                  <Link className='btn btn-outline-success btn-sm float-right mt-4' to={\"/job-stories\"}>More info!</Link>\r\n              </Card.Body>\r\n            </Card>\r\n\r\n            <Card border=\"white\" style={{ width: '18rem' }} className=\"mr-5 ml-5\">\r\n                <Card.Img variant=\"top\" src={pic1} />\r\n                <Card.Body>\r\n                    <Card.Title className=\"text-info\">TARGET AUDIENCES</Card.Title>\r\n                    <Card.Text className='text-secondary'>\r\n                        <ul>\r\n                            <li>Start up team</li>\r\n                            <li>Product Manager, Product Manager</li>\r\n                            <li>Indie developers</li>\r\n                            <li>Marketer</li>\r\n                        </ul>\r\n                    </Card.Text>\r\n                    <Link className='btn btn-outline-info btn-sm float-right mt-4' to={\"/target-audiences\"}>More info!</Link>\r\n                </Card.Body>\r\n            </Card>\r\n\r\n            <Card border=\"white\" style={{ width: '30rem' }}>\r\n                <Card.Img variant=\"top\" src={pic3} />\r\n                <Card.Body>\r\n                    <Card.Title className=\"text-primary\">SOLUTIONS</Card.Title>\r\n                    <Card.Text className='text-secondary'>\r\n                        <ul>\r\n                            <li>Create a hub to feature all resources</li>\r\n                            <li>Suggested launch process</li>\r\n                            <li>Allow users to build, share, keep track their launch kits</li>\r\n                        </ul>\r\n                    </Card.Text>\r\n                    <Link className='btn btn-outline-primary btn-sm float-right mt-4' to={\"/solutions\"}>More info!</Link>\r\n                </Card.Body>\r\n            </Card>\r\n            </CardGroup>\r\n        </div>\r\n\r\n        <Button\r\n            className=\"btn-danger btn-lg btn-outline-secondary badge-pill text-white btn-block mt-5\"\r\n            onClick={onClickCheckList}\r\n        >\r\n            Let's CREATE CHECKLIST NOW!\r\n        </Button>\r\n\r\n        </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomePage\r\n","import React, { useState, useContext } from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport UserContext from '../contexts/UserContext'\r\n\r\nconst Login = () => {\r\n    const { setLoggedIn } = useContext(UserContext)\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const submit = event => {\r\n        event.preventDefault()\r\n\r\n        if(!email) {\r\n          setMessage('Email field can not be empty !')\r\n        } else {\r\n          fetch(`/user/login`, {\r\n              method: 'POST',\r\n              body: JSON.stringify({ email, password }),\r\n              headers: {\r\n                  'Content-Type': 'application/json',\r\n              }\r\n          }).then(res => res.json())\r\n          .then(data => {\r\n              if(data.message) {\r\n                  console.log(data.message)\r\n                  setMessage(data.message)\r\n              }\r\n              if(data.token && data.email) {\r\n                  localStorage.setItem(\"myToken\", data.token) //Set Token\r\n                  localStorage.setItem(\"myEmail\", data.email) //Set Email\r\n                  setLoggedIn(data.token)\r\n                  console.log(localStorage.myToken) // Check Token if stored in localStorage\r\n              }\r\n          })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"auth-wrapper\">\r\n        <div className=\"auth-inner\">\r\n            <form onSubmit={submit}>\r\n                <h3 className='text-secondary'>Log In</h3>\r\n\r\n                <div className=\"form-group\">\r\n                    <label className='text-secondary'>Email</label>\r\n                    <input\r\n                        type=\"email\"\r\n                        value={email}\r\n                        onChange={e => setEmail(e.target.value)}\r\n                        className=\"form-control\"\r\n                        placeholder=\"Email\" />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label className='text-secondary'>Password</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        value={password}\r\n                        onChange={e => setPassword(e.target.value)}\r\n                        className=\"form-control\"\r\n                        placeholder=\"Password\" />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <p className='text-danger'>{message}</p>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <div className=\"custom-control custom-checkbox\">\r\n                        <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\" />\r\n                        <label className=\"custom-control-label text-secondary\" htmlFor=\"customCheck1\">Remember me</label>\r\n                    </div>\r\n                </div>\r\n\r\n                    <button type=\"submit\" className=\"btn btn-danger btn-block\">Submit</button>\r\n\r\n\r\n                <p className=\"forgot-password text-right\">\r\n                    Doesn't have account <Link to={\"/signup\"}>Sign Up?</Link>\r\n                </p>\r\n            </form>\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login\r\n","import React, { useState, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport UserContext from '../contexts/UserContext'\r\n\r\nconst SignUp = () => {\r\n    const { setLoggedIn } = useContext(UserContext)\r\n\r\n    const [username, setUserName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const submit = event => {\r\n        event.preventDefault()\r\n\r\n        if(!username || !email || !password) {\r\n          setMessage('Fields can not be empty !')\r\n        } else {\r\n          fetch(`/user/signup`, {\r\n              method: 'POST',\r\n              body: JSON.stringify({ username, email, password }),\r\n              headers: {\r\n                  'Content-Type': 'application/json'\r\n              }\r\n          }).then(res => res.json())\r\n          .then(data => {\r\n              if(data.message) {\r\n                  console.log(data.message)\r\n                  setMessage(data.message)\r\n              }\r\n              if(data.token && data.email) {\r\n                  localStorage.setItem(\"myToken\", data.token) //Set Token\r\n                  localStorage.setItem(\"myEmail\", data.email)\r\n                  setLoggedIn(data.token)\r\n              }\r\n          })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"auth-wrapper\">\r\n        <div className=\"auth-inner\">\r\n            <form onSubmit={submit}>\r\n            <h3 className='text-secondary'>Sign Up</h3>\r\n\r\n            <div className=\"form-group\">\r\n                <label className='text-secondary'>First Name</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    value={username}\r\n                    onChange={e => setUserName(e.target.value)}\r\n                    className=\"form-control\"\r\n                    placeholder=\"First Name\" />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className='text-secondary'>Email</label>\r\n                <input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    value={email}\r\n                    onChange={e => setEmail(e.target.value)}\r\n                    className=\"form-control\"\r\n                    placeholder=\"Email\" />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className='text-secondary'>Password</label>\r\n                <input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    value={password}\r\n                    onChange={e => setPassword(e.target.value)}\r\n                    className=\"form-control\"\r\n                    placeholder=\"Password\" />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                    <p className='text-danger'>{message}</p>\r\n            </div>\r\n\r\n                <button type=\"submit\" className=\"btn btn-danger btn-block\">Sign Up</button>\r\n\r\n\r\n            <p className=\"forgot-password text-right\">\r\n                Already registered <Link to={\"/login\"} >sign in?</Link>\r\n            </p>\r\n            </form>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUp\r\n","import React, { useEffect, useContext } from 'react'\r\nimport { Redirect } from 'react-router-dom';\r\nimport UserContext from '../contexts/UserContext'\r\n\r\nconst LogOutPage = () => {\r\n    const { setLoggedIn } = useContext(UserContext)\r\n\r\n    useEffect(() => {\r\n        localStorage.removeItem(\"myToken\")\r\n        localStorage.removeItem(\"myEmail\")\r\n        setLoggedIn(localStorage.getItem(\"myToken\"))\r\n    }, [setLoggedIn])\r\n\r\n    return (\r\n        <Redirect to=\"/\" push={true}/>\r\n    )\r\n}\r\n\r\nexport default LogOutPage\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <>\r\n      <div className='text-center'>\r\n      <Spinner animation=\"border\" variant=\"primary\" />\r\n      <Spinner animation=\"border\" variant=\"secondary\" />\r\n      <Spinner animation=\"border\" variant=\"success\" />\r\n      <Spinner animation=\"border\" variant=\"danger\" />\r\n      <Spinner animation=\"border\" variant=\"warning\" />\r\n      <Spinner animation=\"border\" variant=\"info\" />\r\n      <Spinner animation=\"border\" variant=\"dark\" />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Loading\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport UserContext from '../contexts/UserContext'\r\nimport Loading from './components/Loading'\r\nimport pic10 from \"../assets/pic10.png\";\r\n\r\nconst ProfilePage = () => {\r\n  const [ user, setUser ] = useState(null)\r\n    const { setLoggedIn } = useContext(UserContext)\r\n\r\n  useEffect(() => {\r\n    const fetchUser = async() => {\r\n        const result = await fetch(\r\n            `/user/profile/${localStorage.getItem('myEmail')}`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'token-backend': localStorage.getItem('myToken'),\r\n                    'email-backend': localStorage.getItem('myEmail')\r\n                }\r\n            });\r\n        const body = await result.json()\r\n        setUser(body)\r\n\r\n        if(body.message === \"Invalid Token\") {\r\n            localStorage.removeItem(\"myToken\")\r\n            setLoggedIn(localStorage.getItem(\"myToken\"))\r\n        }\r\n        console.log(body);\r\n    }\r\n    fetchUser();\r\n  }, [setUser, setLoggedIn])\r\n\r\n  return (\r\n    <>\r\n    <div className=\"create-checklist-wrapper\">\r\n        <h1 className='text-lg-center text-white text-uppercase shadow-lg p-3 rounded'>My Profile</h1>\r\n    </div>\r\n\r\n    <div className=\"create-checklist-wrapper mt-5\">\r\n    <div className=\"auth-inner-profile\">\r\n    <div className=\"text-center\">\r\n        <img src={pic10} alt='solutions' />\r\n    </div>\r\n      {user ?\r\n        (<>\r\n            <p className='text-secondary text-uppercase'>First Name:</p>\r\n              <h3 className='text-danger'>{user.username}</h3>\r\n            <p className='text-secondary text-uppercase'>Email:</p>\r\n              <h3 className='text-danger'>{user.email}</h3>\r\n        </>)\r\n        : <Loading />\r\n      }\r\n    </div>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProfilePage\r\n","import React, { useContext } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport UserContext from '../contexts/UserContext'\r\n\r\nconst RouteHandler = ({component: Component, ...rest}) => {\r\n    const { loggedIn } = useContext(UserContext)\r\n\r\n    return (\r\n        <Route\r\n          {...rest}\r\n          render={(props) => loggedIn\r\n            ? <Component {...props} />\r\n            : <Redirect to={{pathname: '/login', state: {from: props.location}}} />}\r\n        />\r\n      )\r\n};\r\n\r\nexport default RouteHandler;\r\n","const step_1 = [\r\n  {\r\n    \"_id\": 101,\r\n    \"content\": \"Clearly define your target audience\",\r\n  },\r\n  {\r\n    \"_id\": 102,\r\n    \"content\": \"Double Check Your Content\",\r\n  },\r\n  {\r\n    \"_id\": 103,\r\n    \"content\": \"Check your keywords and SEO\",\r\n  },\r\n  {\r\n    \"_id\": 104,\r\n    \"content\": \"Integrate with Tracking Tools\",\r\n  },\r\n  {\r\n    \"_id\": 105,\r\n    \"content\": \"Check your Feedback/Contact/Support function\",\r\n  },\r\n  {\r\n    \"_id\": 106,\r\n    \"content\": \"Website Check Last-Check\",\r\n  },\r\n  {\r\n    \"_id\": 107,\r\n    \"content\": \"Test Product Internally\",\r\n  },\r\n  {\r\n    \"_id\": 108,\r\n    \"content\": \"Assign roles to your team for the launch\",\r\n  },\r\n  {\r\n    \"_id\": 109,\r\n    \"content\": \"Establish Goal of your launch\",\r\n  },\r\n\r\n]\r\n\r\nexport default step_1\r\n","import { createContext } from \"react\"\r\n\r\nconst CheckBoxContext1 = createContext(null)\r\n\r\nexport default CheckBoxContext1\r\n","import React, { useContext } from 'react'\r\nimport step_1 from '../../data/step_1'\r\nimport CheckBoxContext1 from '../../contexts/CheckBoxContext1'\r\n\r\nconst CheckBoxStep1 = () => {\r\n    const { Step1, setStep1 } = useContext(CheckBoxContext1)\r\n\r\n    const handleToggle = (value) => {\r\n\r\n        const currentIndex = Step1.indexOf(value);\r\n        const newChecked = [...Step1];\r\n\r\n        if (currentIndex === -1) {\r\n            newChecked.push(value)\r\n        } else {\r\n            newChecked.splice(currentIndex, 1)\r\n        }\r\n\r\n        setStep1(newChecked)\r\n        //update this checked information into Parent Component\r\n    }\r\n\r\n    console.log(Step1)\r\n\r\n\r\n    const renderCheckboxLists = () => step_1.map((value, index) => (\r\n      <div key={index} className='ml-2'>\r\n        <input\r\n            type=\"checkbox\"\r\n            className=\"form-check-input\"\r\n            checked={Step1.indexOf(value.content) === -1 ? false : true}\r\n            onChange={() => handleToggle(value.content)}\r\n        />\r\n        <label className=\"form-check-label text-secondary\" htmlFor=\"\">\r\n            {value.content}\r\n        </label>\r\n      </div>\r\n    ))\r\n\r\n\r\n\r\n    return (\r\n      <div>\r\n        <p className=\"text-secondary\">Before you start planning your launch, you need to figure out your overall product and marketing strategy.</p>\r\n        {renderCheckboxLists()}\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default CheckBoxStep1\r\n","const step_2 = [\r\n  {\r\n    \"_id\": 201,\r\n    \"content\": \"Define your Unique Selling Proposition\"\r\n  },\r\n  {\r\n    \"_id\": 202,\r\n    \"content\": \"Write a press release.\"\r\n  },\r\n  {\r\n    \"_id\": 203,\r\n    \"content\": \"Choose the right day and time for your product launch\"\r\n  },\r\n  {\r\n    \"_id\": 204,\r\n    \"content\": \"Inform all stakeholders about your launch date beforehand.\"\r\n  },\r\n  {\r\n    \"_id\": 205,\r\n    \"content\": \"Create promotional and sales materials.\"\r\n  },\r\n  {\r\n    \"_id\": 206,\r\n    \"content\": \"Create timeline for posting on social media\"\r\n  },\r\n\r\n]\r\n\r\nexport default step_2\r\n","import { createContext } from \"react\"\r\n\r\nconst CheckBoxContext2 = createContext(null)\r\n\r\nexport default CheckBoxContext2\r\n","import React, { useContext } from 'react'\r\nimport step_2 from '../../data/step_2'\r\nimport CheckBoxContext2 from '../../contexts/CheckBoxContext2'\r\n\r\nconst CheckBoxStep2 = () => {\r\n    const { Step2, setStep2 } = useContext(CheckBoxContext2)\r\n\r\n    const handleToggle = (value) => {\r\n\r\n        const currentIndex = Step2.indexOf(value);\r\n        const newChecked = [...Step2];\r\n\r\n        if (currentIndex === -1) {\r\n            newChecked.push(value)\r\n        } else {\r\n            newChecked.splice(currentIndex, 1)\r\n        }\r\n\r\n        setStep2(newChecked)\r\n        //update this checked information into Parent Component\r\n    }\r\n\r\n    const renderCheckboxLists = () => step_2.map((value, index) => (\r\n      <div key={index} className='ml-2'>\r\n        <input\r\n            type=\"checkbox\"\r\n            className=\"form-check-input\"\r\n            checked={Step2.indexOf(value.content) === -1 ? false : true}\r\n            onChange={() => handleToggle(value.content)}\r\n        />\r\n        <label className=\"form-check-label text-secondary\" htmlFor=\"\">\r\n            {value.content}\r\n        </label>\r\n      </div>\r\n    ))\r\n\r\n\r\n\r\n    return (\r\n      <div>\r\n        <p className=\"text-secondary\">Time to get things rolling. The next step is to create a website and create a foundation for your marketing.</p>\r\n        {renderCheckboxLists()}\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default CheckBoxStep2\r\n","const step_3 = [\r\n  {\r\n    \"_id\": 301,\r\n    \"content\": \"Send your press release to the media\"\r\n  },\r\n  {\r\n    \"_id\": 302,\r\n    \"content\": \"Make sure everyone is in their place and fully aware their duty\"\r\n  },\r\n  {\r\n    \"_id\": 303,\r\n    \"content\": \"Spread the word.\"\r\n  },\r\n  {\r\n    \"_id\": 304,\r\n    \"content\": \"Execute your media plan\"\r\n  },\r\n  {\r\n    \"_id\": 305,\r\n    \"content\": \"Prepare for any surprising accident\"\r\n  },\r\n  {\r\n    \"_id\": 306,\r\n    \"content\": \"Analyze feedback and support your customers\"\r\n  }\r\n]\r\n\r\n\r\nexport default step_3\r\n","import { createContext } from \"react\"\r\n\r\nconst CheckBoxContext3 = createContext(null)\r\n\r\nexport default CheckBoxContext3\r\n","import React, { useContext } from 'react'\r\nimport step_3 from '../../data/step_3'\r\nimport CheckBoxContext3 from '../../contexts/CheckBoxContext3'\r\n\r\nconst CheckBoxStep3 = () => {\r\n    const { Step3, setStep3 } = useContext(CheckBoxContext3)\r\n    console.log(step_3)\r\n\r\n    const handleToggle = (value) => {\r\n\r\n        const currentIndex = Step3.indexOf(value);\r\n        const newChecked = [...Step3];\r\n\r\n        if (currentIndex === -1) {\r\n            newChecked.push(value)\r\n        } else {\r\n            newChecked.splice(currentIndex, 1)\r\n        }\r\n\r\n        setStep3(newChecked)\r\n        //update this checked information into Parent Component\r\n    }\r\n\r\n    const renderCheckboxLists = () => step_3.map((value, index) => (\r\n      <div key={index} className='ml-2'>\r\n        <input\r\n            type=\"checkbox\"\r\n            className=\"form-check-input\"\r\n            checked={Step3.indexOf(value.content) === -1 ? false : true}\r\n            onChange={() => handleToggle(value.content)}\r\n        />\r\n        <label className=\"form-check-label text-secondary\" htmlFor=\"\">\r\n            {value.content}\r\n        </label>\r\n      </div>\r\n    ))\r\n\r\n\r\n\r\n    return (\r\n      <div>\r\n        <p className=\"text-secondary\">If you have the extra time and resources, you can start marketing your product way before you’ve even launched. Usually, this involves the following.</p>\r\n        {renderCheckboxLists()}\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default CheckBoxStep3\r\n","const step_4 = [\r\n    {\r\n        \"_id\": 401,\r\n        \"content\": \"Plan future communications.\"\r\n    },\r\n    {\r\n        \"_id\": 402,\r\n        \"content\": \"Handle feedbacks\"\r\n    },\r\n    {\r\n        \"_id\": 403,\r\n        \"content\": \"Analyze tracking data\"\r\n    },\r\n    {\r\n        \"_id\": 404,\r\n        \"content\": \"Celebrate\"\r\n    }\r\n]\r\n\r\n\r\nexport default step_4\r\n","import { createContext } from \"react\"\r\n\r\nconst CheckBoxContext4 = createContext(null)\r\n\r\nexport default CheckBoxContext4\r\n","import React, { useContext } from 'react'\r\nimport step_4 from '../../data/step_4'\r\nimport CheckBoxContext4 from '../../contexts/CheckBoxContext4'\r\n\r\nconst CheckBoxStep4 = () => {\r\n    const { Step4, setStep4 } = useContext(CheckBoxContext4)\r\n\r\n    const handleToggle = (value) => {\r\n\r\n        const currentIndex = Step4.indexOf(value);\r\n        const newChecked = [...Step4];\r\n\r\n        if (currentIndex === -1) {\r\n            newChecked.push(value)\r\n        } else {\r\n            newChecked.splice(currentIndex, 1)\r\n        }\r\n\r\n        setStep4(newChecked)\r\n        //update this checked information into Parent Component\r\n    }\r\n\r\n    const renderCheckboxLists = () => step_4.map((value, index) => (\r\n      <div key={index} className='ml-2'>\r\n        <input\r\n            type=\"checkbox\"\r\n            className=\"form-check-input\"\r\n            checked={Step4.indexOf(value.content) === -1 ? false : true}\r\n            onChange={() => handleToggle(value.content)}\r\n        />\r\n        <label className=\"form-check-label text-secondary\" htmlFor=\"\">\r\n            {value.content}\r\n        </label>\r\n      </div>\r\n    ))\r\n\r\n\r\n\r\n    return (\r\n      <div>\r\n        <p className=\"form-check-label text-secondary\">Once you have an MVP, you want to validate 2 things: that your product works, and that it can drive conversions (and hence, revenue). Here’s how to do it lean.</p>\r\n        {renderCheckboxLists()}\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default CheckBoxStep4\r\n","import React from 'react'\r\nimport { Accordion, Card, Button } from 'react-bootstrap';\r\nimport CheckBoxStep1 from \"./CheckBoxStep1\"\r\nimport CheckBoxStep2 from './CheckBoxStep2'\r\nimport CheckBoxStep3 from \"./CheckBoxStep3\"\r\nimport CheckBoxStep4 from \"./CheckBoxStep4\"\r\n\r\nconst CheckBoxes = () => {\r\n\r\n  return (\r\n    <>\r\n    <Accordion defaultActiveKey=\"\">\r\n    <Card>\r\n        <Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n            <Button className='btn-light btn-outline-success btn-block badge-pill'>Stage #1 - Pre-launch</Button>\r\n        </Accordion.Toggle>\r\n        <Accordion.Collapse eventKey=\"0\">\r\n            <Card.Body>\r\n                <CheckBoxStep1 />\r\n\r\n\r\n            </Card.Body>\r\n        </Accordion.Collapse>\r\n    </Card>\r\n    <Card>\r\n        <Accordion.Toggle as={Card.Header} eventKey=\"1\">\r\n            <Button className='btn-light btn-outline-info btn-block badge-pill'>Stage #2 - Beta/Early Access</Button>\r\n        </Accordion.Toggle>\r\n        <Accordion.Collapse eventKey=\"1\">\r\n            <Card.Body>\r\n              <CheckBoxStep2 />\r\n\r\n            </Card.Body>\r\n        </Accordion.Collapse>\r\n    </Card>\r\n    <Card>\r\n        <Accordion.Toggle as={Card.Header} eventKey=\"2\">\r\n            <Button className='btn-light btn-outline-primary btn-block badge-pill'>Stage #3 - Launch</Button>\r\n        </Accordion.Toggle>\r\n        <Accordion.Collapse eventKey=\"2\">\r\n            <Card.Body>\r\n                <CheckBoxStep3 />\r\n\r\n            </Card.Body>\r\n        </Accordion.Collapse>\r\n    </Card>\r\n    <Card>\r\n        <Accordion.Toggle as={Card.Header} eventKey=\"3\">\r\n            <Button className='btn-light btn-outline-warning btn-block badge-pill'>Stage #4 - Post-launch</Button>\r\n        </Accordion.Toggle>\r\n        <Accordion.Collapse eventKey=\"3\">\r\n            <Card.Body>\r\n                <CheckBoxStep4 />\r\n\r\n            </Card.Body>\r\n        </Accordion.Collapse>\r\n    </Card>\r\n    </Accordion>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CheckBoxes\r\n","import React, { useContext } from 'react'\r\nimport CheckBoxContext1 from '../../contexts/CheckBoxContext1'\r\n\r\nconst CheckBoxResultsStep1 = () => {\r\n  const { Step1 } = useContext(CheckBoxContext1)\r\n\r\n  return (\r\n    <>\r\n    <ol>\r\n    {Step1.map((value, index) => (\r\n        <li key={index} className='text-secondary'>{value}</li>\r\n    ))}\r\n    </ol>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CheckBoxResultsStep1\r\n","import React, { useContext } from 'react'\r\nimport CheckBoxContext2 from '../../contexts/CheckBoxContext2'\r\n\r\n\r\nconst CheckBoxResultsStep2 = () => {\r\n  const { Step2 } = useContext(CheckBoxContext2)\r\n\r\n  return (\r\n    <>\r\n    <ol>\r\n    {Step2.map((value, index) => (\r\n        <li key={index} className='text-secondary'>{value}</li>\r\n    ))}\r\n    </ol>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CheckBoxResultsStep2\r\n","import React, { useContext } from 'react'\r\nimport CheckBoxContext3 from '../../contexts/CheckBoxContext3'\r\n\r\n\r\nconst CheckBoxResultsStep3 = () => {\r\n  const { Step3 } = useContext(CheckBoxContext3)\r\n\r\n  return (\r\n    <>\r\n    <ol>\r\n    {Step3.map((value, index) => (\r\n        <li key={index} className='text-secondary'>{value}</li>\r\n    ))}\r\n    </ol>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CheckBoxResultsStep3\r\n","import React, { useContext } from 'react'\r\nimport CheckBoxContext4 from '../../contexts/CheckBoxContext4'\r\n\r\n\r\nconst CheckBoxResultsStep4 = () => {\r\n  const { Step4 } = useContext(CheckBoxContext4)\r\n\r\n  return (\r\n    <>\r\n    <ol>\r\n    {Step4.map((value, index) => (\r\n        <li key={index} className='text-secondary'>{value}</li>\r\n    ))}\r\n    </ol>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CheckBoxResultsStep4\r\n","import React from 'react'\r\nimport { Accordion, Card, Button } from 'react-bootstrap';\r\nimport CheckBoxResultsStep1 from \"./CheckBoxResultsStep1\";\r\nimport CheckBoxResultsStep2 from './CheckBoxResultsStep2'\r\nimport CheckBoxResultsStep3 from \"./CheckBoxResultsStep3\";\r\nimport CheckBoxResultsStep4 from \"./CheckBoxResultsStep4\";\r\n\r\nconst CheckBoxResults = () => {\r\n\r\n  return (\r\n    <>\r\n    <Accordion defaultActiveKey=''>\r\n    <Card>\r\n        <Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n            <Button className='btn-success btn-block'>Stage #1 - Pre-launch</Button>\r\n        </Accordion.Toggle>\r\n        <Accordion.Collapse eventKey=\"0\">\r\n            <Card.Body>\r\n                <CheckBoxResultsStep1 />\r\n\r\n\r\n            </Card.Body>\r\n        </Accordion.Collapse>\r\n    </Card>\r\n    <Card>\r\n        <Accordion.Toggle as={Card.Header} eventKey=\"1\">\r\n            <Button className='btn-info btn-block'>Stage #2 - Beta/Early Access</Button>\r\n        </Accordion.Toggle>\r\n        <Accordion.Collapse eventKey=\"1\">\r\n            <Card.Body>\r\n              <CheckBoxResultsStep2 />\r\n\r\n            </Card.Body>\r\n        </Accordion.Collapse>\r\n    </Card>\r\n    <Card>\r\n        <Accordion.Toggle as={Card.Header} eventKey=\"2\">\r\n            <Button className='btn-primary btn-block'>Stage #3 - Launch</Button>\r\n        </Accordion.Toggle>\r\n        <Accordion.Collapse eventKey=\"2\">\r\n            <Card.Body>\r\n                <CheckBoxResultsStep3 />\r\n\r\n            </Card.Body>\r\n        </Accordion.Collapse>\r\n    </Card>\r\n    <Card>\r\n        <Accordion.Toggle as={Card.Header} eventKey=\"3\">\r\n            <Button className='btn-warning text-white btn-block'>Stage #4 - Post-launch</Button>\r\n        </Accordion.Toggle>\r\n        <Accordion.Collapse eventKey=\"3\">\r\n            <Card.Body>\r\n                <CheckBoxResultsStep4 />\r\n\r\n            </Card.Body>\r\n        </Accordion.Collapse>\r\n    </Card>\r\n    </Accordion>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CheckBoxResults\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { Button, InputGroup, FormControl } from 'react-bootstrap';\r\nimport CheckBoxes from './utils/CheckBoxes'\r\nimport CheckBoxResults from './utils/CheckBoxResults'\r\nimport CheckBoxContext1 from '../contexts/CheckBoxContext1'\r\nimport CheckBoxContext2 from '../contexts/CheckBoxContext2'\r\nimport CheckBoxContext3 from '../contexts/CheckBoxContext3'\r\nimport CheckBoxContext4 from '../contexts/CheckBoxContext4'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst CreationPage = () => {\r\n    const { Step1, setStep1 } = useContext(CheckBoxContext1)\r\n    const { Step2, setStep2 } = useContext(CheckBoxContext2)\r\n    const { Step3, setStep3 } = useContext(CheckBoxContext3)\r\n    const { Step4, setStep4 } = useContext(CheckBoxContext4)\r\n\r\n    const [ checklistName, setChecklistName ] = useState('')\r\n    const [ isSuccess, setIsSuccess ] = useState(false)\r\n\r\n    const email = localStorage.getItem('myEmail')\r\n\r\n    const onSaveCheckLists = event => {\r\n        event.preventDefault()\r\n        // const step2 = JSON.stringify(Checked);\r\n        const step1 = Step1\r\n        const step2 = Step2\r\n        const step3 = Step3\r\n        const step4 = Step4\r\n        const name = checklistName\r\n        // console.log(step2)\r\n\r\n        if (checklistName === '')\r\n            alert('Checklist Name could not be blank!')\r\n        else {\r\n            fetch(`/user/checklists`, {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    email,\r\n                    name,\r\n                    step1,\r\n                    step2,\r\n                    step3,\r\n                    step4\r\n                }),\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'token-backend': localStorage.getItem('myToken')\r\n                }\r\n            })\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    setIsSuccess(data.isSuccess)\r\n                })\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setStep1([])\r\n        setStep2([])\r\n        setStep3([])\r\n        setStep4([])\r\n    }, [setIsSuccess, setStep1, setStep2, setStep3, setStep4])\r\n\r\n    if(isSuccess === false) {\r\n        return (\r\n            <>\r\n            <div className=\"create-checklist-wrapper\">\r\n                <h1 className='text-lg-center text-white text-uppercase shadow-lg p-3 rounded'>Create your Checklist</h1>\r\n            </div>\r\n\r\n            <div className=\"create-checklist-wrapper mt-5\">\r\n            <div className=\"create-checklist-inner\">\r\n              <h5 className='text-secondary'>(Please use this section to Add your Checklists)</h5>\r\n                <br/>\r\n                <InputGroup className=\"mb-3\">\r\n                    <InputGroup.Prepend>\r\n                        <InputGroup.Text className='badge-danger'>\r\n                            CHECKLIST NAME:\r\n                        </InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <FormControl className='text-danger' onChange={(e) => setChecklistName(e.target.value)}/>\r\n                </InputGroup>\r\n                <CheckBoxes />\r\n            </div>\r\n            </div>\r\n\r\n\r\n            <Button type=\"button\" className=\"btn-outline-dark text-white shadow-lg p-3 btn btn-danger btn-lg float-right mt-4 mr-5 badge-pill\" onClick={onSaveCheckLists}>\r\n                SAVE CHECKLIST !\r\n            </Button>\r\n\r\n\r\n            <div className=\"create-checklist-wrapper mt-5 mb-5\">\r\n            <div className=\"create-checklist-inner\">\r\n              <h3 className='text-secondary text-uppercase'>\r\n                  Result:\r\n              </h3>\r\n                <h5 className='text-secondary'>(Please expand Steps below to see more info)</h5>\r\n                <br/>\r\n\r\n                <InputGroup className=\"mb-3\">\r\n                    <InputGroup.Prepend>\r\n                        <InputGroup.Text className='text-danger'>\r\n                            CHECKLIST NAME:\r\n                        </InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <FormControl className='text-danger' disabled value={checklistName}/>\r\n                </InputGroup>\r\n                <CheckBoxResults />\r\n\r\n            </div>\r\n            </div>\r\n            </>\r\n        )\r\n\r\n\r\n\r\n    } else {\r\n        return (\r\n            <>\r\n            <div className=\"create-checklist-wrapper\">\r\n                <h1 className='text-lg-center text-white text-uppercase shadow-lg p-3 rounded'>Checklist Result</h1>\r\n            </div>\r\n            <div className=\"create-checklist-wrapper mt-5\">\r\n              <div className=\"create-checklist-inner\">\r\n                <h3 className='text-lg-center text-secondary text-uppercase'>Checklist is Successfully Saved !!!</h3>\r\n                <InputGroup className=\"mb-3\">\r\n                  <InputGroup.Prepend>\r\n                      <InputGroup.Text className='text-secondary'>\r\n                          CHECKLIST NAME:\r\n                      </InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <FormControl className='text-danger' disabled value={checklistName}/>\r\n                </InputGroup>\r\n\r\n                <CheckBoxResults />\r\n                <br/>\r\n                  <Link className='btn btn-danger btn-sm float-right mt-4' to={\"/\"}>CREATE ANOTHER CHECKLIST</Link>\r\n              </div>\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CreationPage\r\n","import React from 'react'\r\nimport {Table} from 'react-bootstrap';\r\nimport Loading from './Loading'\r\n\r\nconst ChecklistsTable = (props) => {\r\n\r\n  const onClickItemHandle = (item) => {\r\n    props.setClickedItem(item)\r\n  }\r\n\r\n  const onDeleteButton = async (item) => {\r\n    const res = await fetch(`/user/my-checklist/${localStorage.getItem('myEmail')}/${item._id}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'token-backend': localStorage.getItem('myToken'),\r\n        'email-backend': localStorage.getItem('myEmail')\r\n      }\r\n    })\r\n\r\n    if(res.status === 200) {\r\n      const newChecklists = await res.json()\r\n      props.setChecklists(newChecklists)\r\n    }\r\n  }\r\n\r\n  const renderColumns = () => {\r\n    console.log(props.checklists)\r\n    return (\r\n      <tbody>\r\n          {props.checklists ?\r\n            props.checklists.map((item) => (\r\n                <tr key={item._id}>\r\n                 <td className='text-lg-center text-secondary text-uppercase'>1</td>\r\n                  <td className='text-secondary'>\r\n                    <button className=\"btn btn-link text-danger\" onClick={() => onClickItemHandle(item)} >{item.name}</button>\r\n                  </td>\r\n                  <td>\r\n                    <button className=\"float-right badge-pill small btn-outline-secondary\" onClick={() => onDeleteButton(item)}>Delete</button>\r\n                  </td>\r\n                </tr>\r\n            ))\r\n          : null}\r\n      </tbody>\r\n    )\r\n  }\r\n\r\n  if(!props.checklists)\r\n    return <Loading />\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n    <Table className='table-hover'>\r\n    <thead>\r\n      <tr className='btn-light'>\r\n        <th className='text-lg-center text-secondary text-uppercase'>#</th>\r\n        <th className='text-lg-center text-secondary text-uppercase'>Checklists Name</th>\r\n        <th></th>\r\n      </tr>\r\n    </thead>\r\n    {renderColumns()}\r\n  </Table>\r\n  </>\r\n  )\r\n}\r\n\r\nexport default ChecklistsTable\r\n","import React from 'react'\r\nimport {Accordion, Button, Card, FormControl, InputGroup} from \"react-bootstrap\";\r\nimport FaceBookShareButton from \"./FacebookShareButton\";\r\n\r\nconst CheckboxItem = (props) => {\r\n\r\n    const renderSteps = (step) => {\r\n        return (\r\n            <>\r\n            <ol>\r\n                {step.map((value, index) => (\r\n                    <li key={index}>{value}</li>\r\n                ))}\r\n            </ol>\r\n            </>\r\n        )\r\n    }\r\n\r\n   return (\r\n       <>\r\n       <InputGroup className=\"mb-3\">\r\n           <InputGroup.Prepend>\r\n               <InputGroup.Text className='text-secondary'>\r\n                   CHECKLIST NAME:\r\n               </InputGroup.Text>\r\n           </InputGroup.Prepend>\r\n           <FormControl className='text-danger' disabled value={props.clickedItem.name}/>\r\n       </InputGroup>\r\n\r\n       <Accordion defaultActiveKey=\"\">\r\n           <Card>\r\n               <Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n                   <Button className='btn-success btn-block'>Step #1 - Research Phase</Button>\r\n               </Accordion.Toggle>\r\n               <Accordion.Collapse eventKey=\"0\">\r\n                   <Card.Body>\r\n                       {renderSteps(props.clickedItem.step1)}\r\n\r\n                   </Card.Body>\r\n               </Accordion.Collapse>\r\n           </Card>\r\n           <Card>\r\n               <Accordion.Toggle as={Card.Header} eventKey=\"1\">\r\n                   <Button className='btn-info btn-block'>Step #2 - Slap Together a Website</Button>\r\n               </Accordion.Toggle>\r\n               <Accordion.Collapse eventKey=\"1\">\r\n                   <Card.Body>\r\n                       {renderSteps(props.clickedItem.step2)}\r\n\r\n                   </Card.Body>\r\n               </Accordion.Collapse>\r\n           </Card>\r\n           <Card>\r\n               <Accordion.Toggle as={Card.Header} eventKey=\"2\">\r\n                   <Button className='btn-primary btn-block'>Step #3 - Do Some Pre-Launch Marketing</Button>\r\n               </Accordion.Toggle>\r\n               <Accordion.Collapse eventKey=\"2\">\r\n                   <Card.Body>\r\n                       {renderSteps(props.clickedItem.step3)}\r\n\r\n                   </Card.Body>\r\n               </Accordion.Collapse>\r\n           </Card>\r\n           <Card>\r\n               <Accordion.Toggle as={Card.Header} eventKey=\"3\">\r\n                   <Button className='btn-warning btn-block text-white'>Step #4 - Get Some Initial Traction</Button>\r\n               </Accordion.Toggle>\r\n               <Accordion.Collapse eventKey=\"3\">\r\n                   <Card.Body>\r\n                       {renderSteps(props.clickedItem.step4)}\r\n\r\n                   </Card.Body>\r\n               </Accordion.Collapse>\r\n           </Card>\r\n       </Accordion>\r\n\r\n       <FaceBookShareButton />\r\n       </>\r\n   )\r\n}\r\n\r\nexport default CheckboxItem","import React, { useState, useEffect } from 'react';\r\nimport ChecklistsTable from '../pages/components/ChecklistsTable'\r\nimport CheckboxItem from \"./components/CheckboxItem\";\r\n\r\nconst ChecklistPage = () => {\r\n        const [checklists, setChecklists] = useState()\r\n\r\n        const [ clickedItem, setClickedItem ] = useState(null)\r\n\r\n        useEffect(() => {\r\n            const fetchData = async() => {\r\n                const res = await fetch(\r\n                    `/user/my-checklist/${localStorage.getItem('myEmail')}`, {\r\n                        method: 'GET',\r\n                        headers: {\r\n                            'Content-Type': 'application/json',\r\n                            'token-backend': localStorage.getItem('myToken'),\r\n                            'email-backend': localStorage.getItem('myEmail')\r\n                        }\r\n                    })\r\n                if(res.status === 200) {\r\n                  const checklists = await res.json()\r\n                  setChecklists(checklists)\r\n                }\r\n            }\r\n            fetchData();\r\n\r\n        }, [setChecklists])\r\n        console.log(clickedItem);\r\n\r\n\r\n        if(!clickedItem)\r\n            return (\r\n                <>\r\n                <div className=\"create-checklist-wrapper\">\r\n                    <h1 className='text-lg-center text-white text-uppercase shadow-lg p-3 rounded'>My Checklists List</h1>\r\n                </div>\r\n\r\n                <div className=\"create-checklist-wrapper mt-5\">\r\n                <div className=\"create-checklist-inner\">\r\n                    <ChecklistsTable checklists={checklists} setChecklists={setChecklists} setClickedItem={setClickedItem} />\r\n\r\n                </div>\r\n                </div>\r\n                </>\r\n            )\r\n\r\n\r\n        else {\r\n            return (\r\n                <>\r\n                <div className=\"create-checklist-wrapper\">\r\n                <div className=\"create-checklist-inner\">\r\n                    <CheckboxItem clickedItem={clickedItem}/>\r\n                </div>\r\n                </div>\r\n                </>\r\n            )\r\n        }\r\n}\r\n\r\nexport default ChecklistPage\r\n\r\n","import React from 'react'\r\nimport pic5 from '../assets/pic5.jpg'\r\n\r\nconst ProductIdeaPage = () => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"create-checklist-wrapper\">\r\n                <h1 className='text-lg-center text-white text-uppercase shadow-lg p-3 rounded'>Product Idea</h1>\r\n            </div>\r\n\r\n            <div className=\"create-checklist-wrapper mt-5 text-secondary\">\r\n                <div className=\"create-checklist-inner\">\r\n                    <div className=\"text-center\">\r\n                        <img src={pic5} alt='product-idea' />\r\n                    </div>\r\n\r\n                    <h3 className='text-success mt-4'>Stages 1: Pre - Launch</h3>\r\n                    <p>Double check your content to make sure all content is approved and final</p>\r\n                    <p>User testing:</p>\r\n                    <ul>\r\n                        <li>Make sure your navigation works</li>\r\n                        <li>Check for mobile-friendliness</li>\r\n                        <li>Review browser compatibility</li>\r\n                        <li>Site has been tested in all browsers/devices decided on at beginning of project</li>\r\n                    </ul>\r\n                    <p>All forms, payment gateway have been tested</p>\r\n                    <p>Test site for speed/performance and optimization</p>\r\n                    <p>Check SEO, SEM keywords</p>\r\n                    <p>Data goal tracking measure</p>\r\n                    <p>Develop Media Plan: Launching a product without a media plan in place is a considerable risk. You’re only going to launch your product once, so you need to make the most of that occasion.</p>\r\n                    <p>Identify your primary target audience: You may already have your target audience when working on your product value proposition. Your PR strategy should aim to attract and engage this group of people.</p>\r\n                    <p>Establish the goal of your market launch: You need to have an objective in mind when launching your product — for example, the number of users you want to engage or specific sales metrics you want to reach. By measuring your success, you will learn more about what works and what doesn’t for your audience.</p>\r\n                    <p>Check your support: You need to know whether your support team can handle a sudden influx of requests from users. Make sure that there are enough people on board who can answer users’ questions and help them take advantage of the product from day one. Make sure you have a contact page. </p>\r\n                    <br/>\r\n\r\n                    <h3 className='text-info'>Stage 2: Beta Access</h3>\r\n                    <p>Define your Unique Selling Proposition: The key to the quick and efficient creation of promotional materials and easier communication with the media lies in defining your value, mission, and unique selling proposition (USP). </p>\r\n                    <ul>\r\n                        <li>Vision</li>\r\n                        <li>Mission</li>\r\n                        <li>Value</li>\r\n                    </ul>\r\n                    <p>Write a press release: Journalists receive hundreds of press releases each month so make sure that yours catches their attention and engages them to reach out to you.</p>\r\n                    <p>Choose the right day and time for your product launch: Picking right day and time to launch your product is very important to get the maximum attention from your audience and media. </p>\r\n                    <p>Inform all stakeholders about your launch date beforehand: Each member of the team will need to reserve their time to work on the launch and create a buzz.</p>\r\n                    <p>Create promotional and sales materials: Develop your offer and content you will share online. Always make sure that someone else reviews your materials.</p>\r\n                    <p>Create timeline for posting on social media </p>\r\n                    <br/>\r\n\r\n                    <h3 className='text-primary'>Stage 3: Official Launch</h3>\r\n                    <p>Make sure everyone is in their place and fully aware their duty</p>\r\n                    <p>Spread the word: Make sure to ask everyone you know — from partners and employees to family and friends — to send out and let everyone know about your new product. Use social media channels smartly, and you’ll engage your target audience even before the launch.</p>\r\n                    <p>Execute your media plan</p>\r\n                    <p>Prepare for any surprising \"accident\"</p>\r\n                    <br/>\r\n\r\n                    <h3 className='text-warning'>Stage 4: Post - Launch</h3>\r\n                    <p>Plan future communications: It’s smart to create a broader PR plan where you include communications to be delivered after the launch. For example, if you plan to open a newsletter box, you need to know what type of content you’ll be sharing with your audience before someone subscribes.</p>\r\n                    <p>Handle feedbacks</p>\r\n                    <p>Analyze tracking data</p>\r\n                    <p>Celebrate</p>\r\n\r\n                    <br/>\r\n                    <p className='text-danger font-italic'>Finally, don't forget to double check your contents to make sure all content is approved and final</p>\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductIdeaPage","import React from 'react'\r\nimport pic6 from '../assets/pic6.PNG'\r\n\r\nconst TargetAudiencesPage = () => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"create-checklist-wrapper\">\r\n                <h1 className='text-lg-center text-white text-uppercase shadow-lg p-3 rounded'>Target Audiences</h1>\r\n            </div>\r\n\r\n            <div className=\"create-checklist-wrapper mt-5 text-secondary\">\r\n                <div className=\"create-checklist-inner\">\r\n                    <div className=\"text-center\">\r\n                        <img src={pic6} alt='target-audiences'/>\r\n                    </div>\r\n                    <h3 className='text-success mt-4'>Stages 1: Pre - Launch</h3>\r\n                    <p>Double check your content to make sure all content is approved and final</p>\r\n                    <p>User testing:</p>\r\n                    <ul>\r\n                        <li>Make sure your navigation works</li>\r\n                        <li>Check for mobile-friendliness</li>\r\n                        <li>Review browser compatibility</li>\r\n                        <li>Site has been tested in all browsers/devices decided on at beginning of project</li>\r\n                    </ul>\r\n                    <p>All forms, payment gateway have been tested</p>\r\n                    <p>Test site for speed/performance and optimization</p>\r\n                    <p>Check SEO, SEM keywords</p>\r\n                    <p>Data goal tracking measure</p>\r\n                    <p>Develop Media Plan: Launching a product without a media plan in place is a considerable risk. You’re only going to launch your product once, so you need to make the most of that occasion.</p>\r\n                    <p>Identify your primary target audience: You may already have your target audience when working on your product value proposition. Your PR strategy should aim to attract and engage this group of people.</p>\r\n                    <p>Establish the goal of your market launch: You need to have an objective in mind when launching your product — for example, the number of users you want to engage or specific sales metrics you want to reach. By measuring your success, you will learn more about what works and what doesn’t for your audience.</p>\r\n                    <p>Check your support: You need to know whether your support team can handle a sudden influx of requests from users. Make sure that there are enough people on board who can answer users’ questions and help them take advantage of the product from day one. Make sure you have a contact page. </p>\r\n                    <br/>\r\n\r\n                    <h3 className='text-info'>Stage 2: Beta Access</h3>\r\n                    <p>Define your Unique Selling Proposition: The key to the quick and efficient creation of promotional materials and easier communication with the media lies in defining your value, mission, and unique selling proposition (USP). </p>\r\n                    <ul>\r\n                        <li>Vision</li>\r\n                        <li>Mission</li>\r\n                        <li>Value</li>\r\n                    </ul>\r\n                    <p>Write a press release: Journalists receive hundreds of press releases each month so make sure that yours catches their attention and engages them to reach out to you.</p>\r\n                    <p>Choose the right day and time for your product launch: Picking right day and time to launch your product is very important to get the maximum attention from your audience and media. </p>\r\n                    <p>Inform all stakeholders about your launch date beforehand: Each member of the team will need to reserve their time to work on the launch and create a buzz.</p>\r\n                    <p>Create promotional and sales materials: Develop your offer and content you will share online. Always make sure that someone else reviews your materials.</p>\r\n                    <p>Create timeline for posting on social media </p>\r\n                    <br/>\r\n\r\n                    <h3 className='text-primary'>Stage 3: Official Launch</h3>\r\n                    <p>Make sure everyone is in their place and fully aware their duty</p>\r\n                    <p>Spread the word: Make sure to ask everyone you know — from partners and employees to family and friends — to send out and let everyone know about your new product. Use social media channels smartly, and you’ll engage your target audience even before the launch.</p>\r\n                    <p>Execute your media plan</p>\r\n                    <p>Prepare for any surprising \"accident\"</p>\r\n                    <br/>\r\n\r\n                    <h3 className='text-warning'>Stage 4: Post - Launch</h3>\r\n                    <p>Plan future communications: It’s smart to create a broader PR plan where you include communications to be delivered after the launch. For example, if you plan to open a newsletter box, you need to know what type of content you’ll be sharing with your audience before someone subscribes.</p>\r\n                    <p>Handle feedbacks</p>\r\n                    <p>Analyze tracking data</p>\r\n                    <p>Celebrate</p>\r\n\r\n                    <br/>\r\n                    <p className='text-danger font-italic'>Finally, don't forget to double check your contents to make sure all content is approved and final</p>\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TargetAudiencesPage","import React from 'react'\r\nimport pic7 from '../assets/pic7.jpg'\r\n\r\nconst SolutionsPage = () => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"create-checklist-wrapper\">\r\n                <h1 className='text-lg-center text-white text-uppercase shadow-lg p-3 rounded'>Solutions</h1>\r\n            </div>\r\n\r\n            <div className=\"create-checklist-wrapper mt-5 text-secondary\">\r\n                <div className=\"create-checklist-inner\">\r\n                    <div className=\"text-center\">\r\n                        <img src={pic7} alt='solutions' />\r\n                    </div>\r\n\r\n                    <h3 className='text-success mt-4'>Stages 1: Pre - Launch</h3>\r\n                    <p>Double check your content to make sure all content is approved and final</p>\r\n                    <p>User testing:</p>\r\n                    <ul>\r\n                        <li>Make sure your navigation works</li>\r\n                        <li>Check for mobile-friendliness</li>\r\n                        <li>Review browser compatibility</li>\r\n                        <li>Site has been tested in all browsers/devices decided on at beginning of project</li>\r\n                    </ul>\r\n                    <p>All forms, payment gateway have been tested</p>\r\n                    <p>Test site for speed/performance and optimization</p>\r\n                    <p>Check SEO, SEM keywords</p>\r\n                    <p>Data goal tracking measure</p>\r\n                    <p>Develop Media Plan: Launching a product without a media plan in place is a considerable risk. You’re only going to launch your product once, so you need to make the most of that occasion.</p>\r\n                    <p>Identify your primary target audience: You may already have your target audience when working on your product value proposition. Your PR strategy should aim to attract and engage this group of people.</p>\r\n                    <p>Establish the goal of your market launch: You need to have an objective in mind when launching your product — for example, the number of users you want to engage or specific sales metrics you want to reach. By measuring your success, you will learn more about what works and what doesn’t for your audience.</p>\r\n                    <p>Check your support: You need to know whether your support team can handle a sudden influx of requests from users. Make sure that there are enough people on board who can answer users’ questions and help them take advantage of the product from day one. Make sure you have a contact page. </p>\r\n                    <br/>\r\n\r\n                    <h3 className='text-info'>Stage 2: Beta Access</h3>\r\n                    <p>Define your Unique Selling Proposition: The key to the quick and efficient creation of promotional materials and easier communication with the media lies in defining your value, mission, and unique selling proposition (USP). </p>\r\n                    <ul>\r\n                        <li>Vision</li>\r\n                        <li>Mission</li>\r\n                        <li>Value</li>\r\n                    </ul>\r\n                    <p>Write a press release: Journalists receive hundreds of press releases each month so make sure that yours catches their attention and engages them to reach out to you.</p>\r\n                    <p>Choose the right day and time for your product launch: Picking right day and time to launch your product is very important to get the maximum attention from your audience and media. </p>\r\n                    <p>Inform all stakeholders about your launch date beforehand: Each member of the team will need to reserve their time to work on the launch and create a buzz.</p>\r\n                    <p>Create promotional and sales materials: Develop your offer and content you will share online. Always make sure that someone else reviews your materials.</p>\r\n                    <p>Create timeline for posting on social media </p>\r\n                    <br/>\r\n\r\n                    <h3 className='text-primary'>Stage 3: Official Launch</h3>\r\n                    <p>Make sure everyone is in their place and fully aware their duty</p>\r\n                    <p>Spread the word: Make sure to ask everyone you know — from partners and employees to family and friends — to send out and let everyone know about your new product. Use social media channels smartly, and you’ll engage your target audience even before the launch.</p>\r\n                    <p>Execute your media plan</p>\r\n                    <p>Prepare for any surprising \"accident\"</p>\r\n                    <br/>\r\n\r\n                    <h3 className='text-warning'>Stage 4: Post - Launch</h3>\r\n                    <p>Plan future communications: It’s smart to create a broader PR plan where you include communications to be delivered after the launch. For example, if you plan to open a newsletter box, you need to know what type of content you’ll be sharing with your audience before someone subscribes.</p>\r\n                    <p>Handle feedbacks</p>\r\n                    <p>Analyze tracking data</p>\r\n                    <p>Celebrate</p>\r\n\r\n                    <br/>\r\n                    <p className='text-danger font-italic'>Finally, don't forget to double check your contents to make sure all content is approved and final</p>\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SolutionsPage","import React from 'react'\r\nimport pic8 from \"../assets/pic8.JPG\";\r\n\r\nconst AboutUsPage = () => {\r\n\r\n    return (\r\n        <>\r\n        <div className=\"create-checklist-wrapper\">\r\n            <h1 className='text-lg-center text-white text-uppercase shadow-lg p-3 rounded'>About Us</h1>\r\n        </div>\r\n\r\n        <div className=\"create-checklist-wrapper mt-5 text-secondary\">\r\n            <div className=\"create-checklist-inner\">\r\n                <ul>\r\n                    <li>Le Thao My Nguyen: 300301243</li>\r\n                    <li>Khue Nguyen: 300300461</li>\r\n                    <li>Tung Lam Trinh: 300267601</li>\r\n                </ul>\r\n                <div className=\"text-center\">\r\n                    <img src={pic8} alt='about-us' />\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AboutUsPage","import React from 'react'\r\nimport pic9 from \"../assets/pic9.png\";\r\n\r\nconst FeedbackPage = () => {\r\n\r\n    return (\r\n        <>\r\n        <div className=\"create-checklist-wrapper\">\r\n            <h1 className='text-lg-center text-white text-uppercase shadow-lg p-3 rounded'>Feedback</h1>\r\n        </div>\r\n\r\n        <div className=\"create-checklist-wrapper mt-5 text-secondary\">\r\n            <div className=\"create-checklist-inner\">\r\n                <div className=\"text-center\">\r\n                    <img src={pic9} alt='feedback' />\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FeedbackPage","import React, { useState, useMemo } from 'react';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect\r\n} from 'react-router-dom';\r\n\r\nimport NavBar from './pages/NavBar/NavBar'\r\nimport FooterBar from './pages/NavBar/FooterBar'\r\nimport HomePage from './pages/HomePage'\r\nimport LoginPage from './pages/LoginPage'\r\nimport SignUpPage from './pages/SignUpPage'\r\nimport LogOutPage from './pages/LogOutPage'\r\nimport ProfilePage from './pages/ProfilePage'\r\nimport RouteHandler from './router/RouteHandler'\r\nimport CreationPage from './pages/CreationPage';\r\nimport ChecklistPage from './pages/ChecklistPage';\r\nimport ProductIdeaPage from \"./pages/ProductIdeaPage\";\r\nimport UserContext from './contexts/UserContext'\r\nimport CheckBoxContext1 from './contexts/CheckBoxContext1'\r\nimport CheckBoxContext2 from './contexts/CheckBoxContext2'\r\nimport CheckBoxContext3 from './contexts/CheckBoxContext3'\r\nimport CheckBoxContext4 from './contexts/CheckBoxContext4'\r\nimport TargetAudiencesPage from \"./pages/TargetAudiencesPage\";\r\nimport SolutionsPage from \"./pages/SolutionsPage\";\r\nimport AboutUsPage from \"./pages/AboutUsPage\";\r\nimport FeedbackPage from \"./pages/FeedbackPage\";\r\n\r\nfunction App() {\r\n    const [loggedIn, setLoggedIn] = useState(localStorage.getItem(\"myToken\"))\r\n    const value = useMemo(() => ({ loggedIn, setLoggedIn }), [loggedIn, setLoggedIn])\r\n  // const loggedIn = localStorage.getItem(\"myToken\")\r\n    const [Step1, setStep1] = useState([])\r\n    const checkboxValue1 = useMemo(() => ({ Step1, setStep1 }), [Step1, setStep1])\r\n    const [Step2, setStep2] = useState([])\r\n    const checkboxValue2 = useMemo(() => ({ Step2, setStep2 }), [Step2, setStep2])\r\n    const [Step3, setStep3] = useState([])\r\n    const checkboxValue3 = useMemo(() => ({ Step3, setStep3 }), [Step3, setStep3])\r\n    const [Step4, setStep4] = useState([])\r\n    const checkboxValue4 = useMemo(() => ({ Step4, setStep4 }), [Step4, setStep4])\r\n\r\n\r\n  return (\r\n    <Router>\r\n      <UserContext.Provider value={value}>\r\n      <CheckBoxContext1.Provider value={checkboxValue1}>\r\n      <CheckBoxContext2.Provider value={checkboxValue2}>\r\n      <CheckBoxContext3.Provider value={checkboxValue3}>\r\n      <CheckBoxContext4.Provider value={checkboxValue4}>\r\n        <div className=\"App\">\r\n          <div className=\"NavBar\">\r\n            <NavBar />\r\n          </div>\r\n\r\n          {loggedIn ?\r\n            <>\r\n            <Switch>\r\n              <Route exact path=\"/\" component={HomePage} />\r\n              {/* <Route exact path=\"/logout\" render={() => <LogOutPage setLoggedIn={setLoggedIn} />} /> */}\r\n              <Route exact path=\"/logout\" component={LogOutPage} />\r\n              <Route exact path=\"/job-stories\" component={ProductIdeaPage} />\r\n              <Route exact path=\"/target-audiences\" component={TargetAudiencesPage} />\r\n              <Route exact path=\"/solutions\" component={SolutionsPage} />\r\n              <Route exact path=\"/about-us\" component={AboutUsPage} />\r\n              <Route exact path=\"/feedback\" component={FeedbackPage} />\r\n              <RouteHandler exact path='/profile' component={ProfilePage} />\r\n              <RouteHandler exact path='/checklist' component={CreationPage} />\r\n              <RouteHandler exact path='/my-checklist' component={ChecklistPage} />\r\n              <Route path=\"*\" component={() => <Redirect to=\"/\"/> } />\r\n            </Switch>\r\n            </>\r\n          :\r\n            <>\r\n              <Switch>\r\n              <Route exact path=\"/\" component={HomePage} />\r\n              <Route exact path=\"/job-stories\" component={ProductIdeaPage} />\r\n              <Route exact path=\"/target-audiences\" component={TargetAudiencesPage} />\r\n              <Route exact path=\"/solutions\" component={SolutionsPage} />\r\n              <Route exact path=\"/about-us\" component={AboutUsPage} />\r\n              <Route exact path=\"/feedback\" component={FeedbackPage} />\r\n              <Route exact path=\"/login\" component={LoginPage} />\r\n              <Route exact path=\"/signup\" component={SignUpPage} />\r\n              <RouteHandler exact path='/checklist' component={CreationPage} />\r\n              <RouteHandler exact path='/my-checklist' component={ChecklistPage} />\r\n              <Route path=\"*\" component={() => <Redirect to=\"/\"/> } />\r\n            </Switch>\r\n            </>\r\n          }\r\n\r\n        <FooterBar />\r\n        </div>\r\n      </CheckBoxContext4.Provider>\r\n      </CheckBoxContext3.Provider>\r\n      </CheckBoxContext2.Provider>\r\n      </CheckBoxContext1.Provider>\r\n      </UserContext.Provider>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import 'whatwg-fetch'\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}